# Uncomment this line to define a global platform for your project
platform :ios, '15.5'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

def flutter_post_install(installer)
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Fix for sqflite_darwin Flutter.h not found error
    target.build_configurations.each do |config|
      config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'YES'
      
      # Add the Flutter framework search paths
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_CONFIGURATION_BUILD_DIR}'
      
      # Add header search paths
      config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Flutter'
      config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
    end
  end
end

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Add Mixpanel Swift dependency (compatible with Session Replay)
  pod 'Mixpanel-swift', '~> 5.0.0'
  
  # NOTE: You need to manually add the Mixpanel Session Replay package in Xcode:
  # 1. In Xcode, go to File → Add Package Dependencies…
  # 2. Paste the GitHub URL: https://github.com/mixpanel/mixpanel-ios-session-replay-package
  # 3. Follow the prompts to select the latest version and add the package to your project.

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  flutter_post_install(installer)

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Enable privacy manifest for Mixpanel Session Replay
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
        'PERMISSION_PHOTOS=1',
        'PERMISSION_MICROPHONE=1'
      ]
    end
  end
end
