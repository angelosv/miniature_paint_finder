# Uncomment this line to define a global platform for your project
platform :ios, '15.5'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Configuración específica por target
    if ['mobile_scanner', 'MLKitBarcodeScanning', 'MLKitVision', 'MLImage', 'GoogleMLKit'].include?(target.name)
      # Para Pods problemáticos que no funcionan en simuladores
      target.build_configurations.each do |config|
        if config.build_settings['SDKROOT'] == 'iphonesimulator'
          # Desactivar completamente estos pods en simuladores
          config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
          
          # Excluir arquitectura arm64 para estos pods en simuladores
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64 i386 armv7'
          
          # Agregar definición para desactivar el escaneo de códigos en simuladores
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'DISABLE_BARCODE_SCANNING=1'
        end
      end
    else
      # Para el resto de targets
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.5'
        
        # Optimizations for camera performance
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '3'  # Highest optimization level
        
        # Disable bitcode as it's deprecated and can cause issues
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Configuración general para simuladores
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386 armv7'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
        
        # Permitir arm64 en simuladores para Apple Silicon
        if config.build_settings['SDKROOT'] == 'iphonesimulator'
          config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
        end
      end
    end
  end
end
